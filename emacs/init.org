#+PROPERTY: header-args:emacs-lisp :tangle init.el :comments no :mkdirp yes :prologue "(unless (bound-and-true-p lexical-binding) (princ \";;; -*- lexical-binding: t -*-\\n\"))"
#+title: Emacs Config

* Lexical Binding

#+begin_src emacs-lisp
;;; -*- lexical-binding: t -*-
#+end_src

* Performance Tweaks

#+begin_src emacs-lisp
(setq gc-cons-threshold (* 50 1000 1000))
(add-hook 'emacs-startup-hook
          (lambda () (setq gc-cons-threshold (* 2 1000 1000))))
#+end_src

* Auto-Tangle on Save

#+begin_src emacs-lisp
(defun auto-tangle-config ()
  (when (string-equal (buffer-file-name)
                      (expand-file-name "init.org" user-emacs-directory))
    (let ((org-confirm-babel-evaluate nil))
      (org-babel-tangle))))

(add-hook 'org-mode-hook
          (lambda ()
            (add-hook 'after-save-hook #'auto-tangle-config nil 'local)))
#+end_src

* Package Setup

#+begin_src emacs-lisp
(require 'package)
(setq package-enable-at-startup nil)
#+end_src

* Bootstrap `use-package`

#+begin_src emacs-lisp
(require 'use-package)
(setq use-package-always-ensure t
      use-package-always-defer t
      use-package-expand-minimally t)
#+end_src

* Evil Mode

#+include: "modules/evil.org"

#+begin_src emacs-lisp
(org-babel-load-file
  (expand-file-name "modules/evil.org"
    (file-name-directory (or load-file-name buffer-file-name))))
#+end_src

* UI

#+include: "modules/ui.org"

#+begin_src emacs-lisp
(org-babel-load-file
  (expand-file-name "modules/ui.org"
    (file-name-directory (or load-file-name buffer-file-name))))
#+end_src

* Navigation

#+include: "modules/navigation.org"

#+begin_src emacs-lisp
(org-babel-load-file
  (expand-file-name "modules/navigation.org"
    (file-name-directory (or load-file-name buffer-file-name))))
#+end_src

* Direnv

#+include: "modules/direnv.org"

#+begin_src emacs-lisp
(org-babel-load-file
  (expand-file-name "modules/direnv.org"
    (file-name-directory (or load-file-name buffer-file-name))))
#+end_src

* LSP

#+include: "modules/lsp.org"

#+begin_src emacs-lisp
(org-babel-load-file
  (expand-file-name "modules/lsp.org"
    (file-name-directory (or load-file-name buffer-file-name))))
#+end_src

* Org

#+include: "modules/org.org"

#+begin_src emacs-lisp
(org-babel-load-file
  (expand-file-name "modules/org.org"
    (file-name-directory (or load-file-name buffer-file-name))))
#+end_src

* Magit

#+include: "modules/magit.org"

#+begin_src emacs-lisp
(org-babel-load-file
  (expand-file-name "modules/magit.org"
    (file-name-directory (or load-file-name buffer-file-name))))
#+end_src
